{"version":3,"sources":["auth/index.jsx","components/Navbar/Navbar.jsx","HOC/Layout.jsx","posts/AllPosts/AllPosts.jsx","posts/apiPosts.js","components/Home/Home.jsx","user/Register.jsx","components/loading/Spinner.jsx","user/SocialLogin.jsx","user/Login.jsx","user/apiUser.js","user/FindPeople/FindPeople.jsx","user/AllUsers/AllUsers.jsx","user/DeleteUser.jsx","user/Follow/FollowProfileButton.jsx","user/ProfileTabs/ProfileTabs.jsx","posts/UsersPosts/UsersPosts.jsx","user/UserBackgroundPhoto/UserBackgroundPhoto.jsx","user/Profile/Profile.jsx","user/EditProfile/EditProfile.jsx","auth/PrivateRoute.jsx","posts/NewPost/NewPost.jsx","posts/Comment/Comment.jsx","posts/SinglePost/SinglePost.jsx","posts/EditPost/EditPost.jsx","Routes.jsx","App.js","index.js","assets/default-avatar.jpg","user/User.module.css","assets/avatar.png","assets/tropical-escape.jpg","assets/sz-logo.png","assets/wp.jpg","assets/node.png"],"names":["logout","next","window","localStorage","removeItem","fetch","process","method","then","res","json","console","log","catch","err","isAuthenticated","getItem","JSON","parse","deleteAccount","token","userId","headers","Accept","Authorization","result","response","Navbar","showSidebar","setState","sidebar","hideSidebar","redirectToAccount","id","location","href","profileDropDown","history","Dropdown","Toggle","size","data-toggle","title","Menu","Item","eventKey","onClick","user","_id","name","push","color","isLinkActive","path","pathname","renderNavbar","className","src","logo","alt","style","to","state","toggle","this","props","Component","withRouter","Layout","children","AllPosts","post","isTweetter","postedBy","tweeterName","onError","i","target","avatar","Date","getTime","created","toDateString","defaultImg","likes","length","body","substring","getAllPosts","getPost","postId","like","stringify","unlike","comment","uncomment","Home","posts","fetchAllPosts","data","error","map","key","React","Register","handleInputChange","e","value","handleFormSubmit","preventDefault","register","email","password","success","message","renderForm","styles","section__register","register__form","register__formHeader","displayErrors","onSubmit","htmlFor","onChange","type","autoComplete","errorMsg","successMsg","Spinner","role","SocialLogin","responseGoogle","profileObj","socialLogin","googleId","imageUrl","jwt","redirectToReferrer","setItem","clientId","buttonText","onSuccess","onFailure","Login","loading","login","redirectToReferer","login__form","login__formHeader","googlebtn","section__login","getUser","backgroundImageHandler","formData","follow","followId","unfollow","unfollowId","FindPeople","users","undefined","open","followMsg","clickFollow","index","followList","splice","renderUsers","findPeople","AllUsers","DeleteUser","redirect","deleteProfile","confirmPopUp","confirm","FollowProfileButton","following","clickFollowButton","ProfileTabs","followers","follower","isfollowing","UsersPosts","postsCard","maxWidth","width","height","objectFit","UserBackgroundPhoto","handleChange","formValues","files","photoData","set","handleSubmit","accept","FormData","Profile","checkFollow","find","callApi","getUserInfos","redirectToHome","aboutComponent","about","address","website","fontSize","renderAbout","About","followComp","postComp","renderFollow","renderPosts","getUsersPosts","displayBackgroundPhotoPopup","popup","renderPopUp","renderUserInfos","profileImg","backgroundImage","image","isPage","messageComp","match","params","prevProps","reload","EditProfile","fileSize","userData","backFunction","goBack","isInputValid","updateUserProfile","auth","userLocalStorage","redirectToProfile","photoUrl","placeholder","test","PrivateRoute","component","rest","render","from","NewPost","postImgSize","postData","createPost","cols","rows","displayErroMsg","Comment","text","onInputChangeHandler","isCommentValid","updateComments","comments","removeComment","renderInput","borderRadius","renderComment","toLocaleTimeString","renderErrorMsg","SinglePost","isAlreadyLiked","indexOf","toggleLikeIconHandler","redirectToSignIn","likeIcon","renderPost","updated","border","background","deletePost","EditPost","updatePost","defaultImage","Routes","exact","App","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1ea38bb6.chunk.js","sourcesContent":["\n//<<<<<<<<<<<<<< <<LOG IN METHODS >>>>>>>>>>>>>>>>\n\nexport const login = user => {\n    return fetch(`${process.env.REACT_APP_API_URI}/login`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n        .then( res => {            \n            return res.json();\n        })\n        .catch( err => console.log(err));\n}\n\nexport const isLogedIn = (jwt, next) => {\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem(\"lemur_zone_jwt\", JSON.stringify(jwt));\n        next();\n    }          \n}\n\n//<<<<<<<<<<<<<<< REGISTER METHODS >>>>>>>>>>>>>>>>>\n\nexport const register = user => {\n    return fetch(`${process.env.REACT_APP_API_URI}/register`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(user)\n    })\n    .then( res => {             \n        return res.json() \n    })\n    .catch( err => console.log(err));\n}\n\n//<<<<<<<<<<<<<<<<<<< LOG OUT >>>>>>>>>>>>>>>>>>>\n\nexport const logout = (next) => {\n    \n    if (typeof window !== \"undefined\"){\n        localStorage.removeItem('lemur_zone_jwt');\n        next();\n        return fetch(`${process.env.REACT_APP_API_URI}/logout`, {\n            method: \"GET\",            \n        })\n        .then(res => {            \n            return res.json()\n        }) \n        .then(res => console.log(res))       \n        .catch(err => console.log(err))\n    }\n}\n\nexport const isAuthenticated = () => {\n    if (typeof window === \"undefined\"){\n        return false;\n    }\n    if (localStorage.getItem('lemur_zone_jwt')) {\n        return JSON.parse(localStorage.getItem('lemur_zone_jwt'));\n    } else {\n        return false;\n    }\n}\n\n//<<<<<<<<<<<<<<<<<<<<< DELETE ACCOUNT >>>>>>>>>>>>>>>\n\nexport const deleteAccount = (token, userId) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        }\n    })\n    .then(res => {\n        return res.json()\n    })\n    .then( result => console.log(result))\n    .catch(err => console.log(err.response))\n}\n\n//<<<<<<<<<<<<<<<<<<<<< LOGIN GOOGLE CHECK AND REDIRECTION >>>>>>>>>>>>>>>>>>>>>>>>>>\nexport const authenticate = (jwt, next) => {\n    if (typeof window !== \"undefined\") {\n        localStorage.setItem('lemur_zone_jwt', JSON.stringify(jwt))\n        next();\n    }\n}\n\n//<<<<<<<<<<<<<<<<<<<<< GOGGLE LOGIN >>>>>>>>>>>>>>>>>>>>\nexport const socialLogin = user => {\n    return fetch(`${process.env.REACT_APP_API_URI}/social-login/`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        // credentials: \"include\", // works only in the same origin\n        body: JSON.stringify(user)\n    })\n        .then(response => {\n            console.log(\"signin response: \", response);\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport'./navbar.scss';\nimport logo from '../../assets/sz-logo.png';\n\nimport { FaTimes } from \"react-icons/fa\";\nimport { AiOutlineLogout } from \"react-icons/ai\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\nimport { isAuthenticated, logout } from '../../auth';\nimport { GiHamburgerMenu } from \"react-icons/gi\";\n\nimport { Dropdown } from 'react-bootstrap';\n\n\nclass Navbar extends Component{\n    \n    constructor(){\n        super()\n        this.state = {\n            toggle: false,\n            sidebar: ''\n            \n        }\n    }\n    \n    showSidebar = () => {        \n        this.setState({ sidebar: 'show-sidebar' })\n    }\n    hideSidebar = () => {\n        this.setState({ sidebar: '' })\n    }\n\n    redirectToAccount = id => {\n        return window.location.href=(`/user/${id}`)\n    }\n        \n    profileDropDown = (history) => {        \n        return (\n            <Dropdown>\n                <Dropdown.Toggle  id=\"dropdown-custom-components\">\n                    <FaRegUserCircle size={30} data-toggle=\"tooltip\" title=\"My profile\"/>                    \n                </Dropdown.Toggle>\n            \n                <Dropdown.Menu>\n                    <Dropdown.Item eventKey=\"1\">                        \n                        <li onClick={() => this.redirectToAccount(isAuthenticated().user._id)}>\n                            {isAuthenticated().user.name} Profile\n                        </li>\n                    </Dropdown.Item>\n                    {/* <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item> */}\n                    <Dropdown.Item eventKey=\"3\">\n                        <AiOutlineLogout \n                            onClick={() => logout(() => history.push('/'))}\n                            size={25} \n                            color=\"orangeRed\" \n                            data-toggle=\"tooltip\" \n                            title=\"Sign Out\"\n                        />\n                    </Dropdown.Item>                    \n                </Dropdown.Menu>\n            </Dropdown>\n        )        \n    }\n\n    isLinkActive = (history, path) => {\n        if (history.location.pathname === path){\n            return { color: \"#00DA9E\" }\n        } else {\n            return { color: \"#fff\" }\n        }\n    }\n\n    renderNavbar = ( history ) => {                    \n        return(  \n            <>      \n            <nav className={`nav`}>                                            \n                <div className=\"nav-center\">\n                    <div className=\"nav-header\">\n                        <img src={logo} alt=\"\"  className=\"nav-logo\" />\n                        <GiHamburgerMenu className=\"nav-menu\" onClick={this.showSidebar}/>\n                    </div>\n                                \n                {isAuthenticated() \n                    ? (                        \n                        <ul className=\"nav-links\">\n                            <li>\n                                <a href=\"/\" style={this.isLinkActive(history, \"/\")}>Home</a>\n                            </li>\n                            <li>\n                                <a href=\"/post/new\" style={this.isLinkActive(history, \"/post/new\")}>Tweet</a>\n                            </li>\n                            <li>\n                                <a href=\"/find-people\" style={this.isLinkActive(history, \"/find-people\")}>Follows</a>\n                            </li>\n                            <li>\n                                <a href=\"/all-users\" style={this.isLinkActive(history, \"/all-users\")}>Users</a>\n                            </li>\n                            <li>\n                                {this.profileDropDown(history)} \n                            </li>\n                        </ul>                        \n                    )\n                    : (                       \n                        <ul className=\"nav-links\"> \n                            <li>\n                                <Link to=\"/login\" style={this.isLinkActive(history, \"/login\")}>Sign In</Link>\n                            </li>                           \n                            <li>\n                                <Link to=\"/register\" style={this.isLinkActive(history, \"/register\")}>Sign Up</Link>                             \n                            </li>\n                        </ul>\n                    )\n                }\n                </div>\n            </nav>\n            <aside className={`sidebar ${this.state.sidebar}`}>\n                <div>\n                    <FaTimes className=\"close-btn\" onClick={this.hideSidebar} />\n                    { isAuthenticated() \n                        ?  ( \n                            <ul className=\"sidebar-links\">\n                                <li><a href=\"/\">Home</a></li>\n                                <li \n                                    className=\"sidebar-links-profile\"\n                                    onClick={() => this.redirectToAccount(isAuthenticated().user._id)}>Profile</li>\n                                <li><a href=\"/post/new\">Tweet</a></li>\n                                <li><a href=\"/all-users\">Users</a></li>\n                                <li><a href=\"/find-people\">Follows</a></li>\n                                <li>\n                                    <AiOutlineLogout\n                                        onClick={() => logout(() => history.push('/'))}\n                                        size={60}\n                                        className=\"sidebar-links-logout\"\n                                        data-toggle=\"tooltip\"\n                                        title=\"Log Out\"\n                                    />\n                                </li>\n                            </ul>\n                        )\n                        : (\n                            <ul className=\"sidebar-links\">\n                                <li><a href=\"/login\">Sign In</a></li>\n                                <li><a href=\"/register\">Sign Up</a></li>\n                            </ul>\n                        )\n                    }                                                \n                </div>\n            </aside>\n            </>\n        )        \n    }\n\n    render() {                  \n        return (\n            <>                    \n                { this.renderNavbar(this.props.history) }\n            </>\n        )\n    }\n}\n\nexport default withRouter(Navbar);","import React from 'react';\nimport Navbar from '../components/Navbar/Navbar';\n// import Footer from '../components/Footer/Footer';\n\nconst Layout = props => {                \n    return ( \n        <>\n            <Navbar />\n                <div className=\"\">\n                    {props.children}\n                </div>\n            {/* <Footer /> */}\n        </>\n    );\n}\n\nexport default Layout;","import React from 'react';\nimport './allPost.scss';\nimport defaultImg from '../../assets/tropical-escape.jpg'\nimport { Link } from 'react-router-dom';\nimport avatar from '../../assets/avatar.png';\nimport {AiFillLike} from 'react-icons/ai';\n\nconst AllPosts = props => {\n    console.log(\"POST\",props)\n    const { post } = props;\n    const isTweetter = post.postedBy ? `/user/${post.postedBy._id}` : \"\";\n    const tweeterName = post.postedBy ? post.postedBy.name : \" Unknown \";\n\n    return(       \n        <article className=\"post-card\">\n            <div className=\"post-card__header\">                        \n                <img                    \n                    onError={ i => (i.target.src = `${avatar}`)}\n                    src={`${process.env.REACT_APP_API_URI}/user/photo/${post.postedBy._id}?${new Date().getTime()}`} \n                    alt={post.postedBy.name}                    \n                />                        \n                <span>                    \n                    by <Link to={`${isTweetter}`} >{ tweeterName } </Link>\n                    on { new Date(post.created).toDateString() }                    \n                </span>                            \n            </div>\n            <img \n                onError={ i => (i.target.src = `${defaultImg}`)}\n                src={`${process.env.REACT_APP_API_URI}/post/photo/${post._id}`}                 \n                alt={post.title}                 \n            />\n        \n            <div className=\"post-card__footer\">\n                <span><AiFillLike size={20}/> {post.likes.length} </span>\n                <Link to={`/post/${post._id}`}>                            \n                    <h4>{ post.title }</h4>\n                </Link> \n                <p className=\"\">{ post.body.substring(0, 100) }</p>                                                \n                <Link to={`/post/${post._id}`} className=\"\">\n                    Read More ...\n                </Link>                        \n            </div>                                                \n        </article>\n       \n    )\n}\n \nexport default AllPosts;\n\n","//CREATE NEW POST\nexport const createPost = (userId, token, post) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/post/new/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            // \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: post\n    })\n    .then(response =>  response.json())\n    .catch( err => console.log(err));\n}\n\n// GET ALL POSTS\nexport const getAllPosts = () => {\n    return fetch(`${process.env.REACT_APP_API_URI}/posts` ,{\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",            \n        }\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err));\n}\n\n// GET ONE POST\nexport const getPost = postId => {\n    return fetch(`${process.env.REACT_APP_API_URI}/post/${postId}`, {\n        method: \"GET\"        \n    })\n    .then( response => response.json() )\n    .catch(err => console.log(err))\n}\n\n// GET USERS POSTS\nexport const getUsersPosts = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/posts/by/${userId}` ,{\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", \n            Authorization: `Bearer ${token}`           \n        }\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err));\n}\n\n//DELETE POST\nexport const deletePost = (token, postId) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/post/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then( res => {\n        return res.json()\n    })    \n    .catch(err => console.log(err))\n}\n\n// UPDATE POST\nexport const updatePost = (postId, token, postData) => {\n    \n    return fetch(`${process.env.REACT_APP_API_URI}/post/${postId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            // \"Content-Type\": \"application/json\", -> Not working with image upload\n            Authorization: `bearer ${token}`\n        },\n        body: postData\n    }).then( response => response.json()).catch(err => console.log(err))        \n}\n\n// LIKE API REQUEST\nexport const like = (userId, token, postId) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/post/like`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId })\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err));\n}\n\n// UNLIKE API REQUEST\nexport const unlike = (userId, token, postId) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/post/unlike`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId })\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err));\n}\n\n//COMMENT API REQUEST\nexport const comment = (userId, token, postId, comment) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/post/comment`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId, comment })\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err));\n}\n\n//UNCOMMENT API REQUEST\nexport const uncomment = (userId, token, postId, comment) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/post/uncomment`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify({ userId, postId, comment })\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err));\n}","import React from 'react';\nimport './home.scss';\nimport AllPosts from '../../posts/AllPosts/AllPosts';\nimport { getAllPosts } from '../../posts/apiPosts'\n\nclass Home extends React.Component {\n    \n    state = { \n        posts:[]\n     }\n    \n    componentDidMount(){\n        this.fetchAllPosts();\n    }\n    \n    fetchAllPosts = () => {\n        getAllPosts()\n            .then(data => {\n                if(data.error){\n                    console.log(data.error)\n                } else {\n                    console.log(data)\n                    this.setState({ posts: data.posts })\n                }\n            })        \n    }\n    \n    render() { \n        const { posts } = this.state;\n        return ( \n            <section className=\"section-allpost\">               \n                <div className=\"section-allpost__header\">\n                    <h1 className=\"\">Recent <span>Posts</span></h1>\n                </div> \n                <article className=\"section-allpost__container\"> \n                    { posts.map( (post,i) => {\n                        return(                              \n                                <AllPosts post={post} key={i}/>                                                                                         \n                        )\n                    })}                   \n                </article>\n            </section>\n         );\n    }\n}\n \nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport styles from './User.module.css';\n\nimport { register } from '../auth';\n\nclass Register extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\",\n            error: \"\",\n            success: ''\n        }\n    }\n\n    handleInputChange = name => e => {        \n        this.setState({ [name]: e.target.value });\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        const { name, email, password } = this.state;\n        const user = {\n            name: name,\n            email: email,\n            password: password\n        }    \n        register(user)\n            .then( data => {\n                if (data.error) {\n                    this.setState({ error: data.error })\n                }else {\n                    this.setState({\n                        name: '',\n                        email: '',\n                        password: '',\n                        error: '',\n                        success: data.message\n                    })\n                }\n            });                \n    }\n    \n    renderForm = (name, email, password) => {\n        return(\n            <div className={`container-fluid ${styles.section__register}`}>\n                <div className={styles.register__form}>\n                    <h5 className={styles.register__formHeader}>Sign Up</h5>\n                    { this.displayErrors() }\n                    <form onSubmit={ this.handleFormSubmit }>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"name\" className=\"text-muted\">Username</label>\n                            <input \n                                onChange={this.handleInputChange('name')} \n                                type=\"text\" name=\"name\" \n                                className=\"form-control\"\n                                value={ name }\n                                autoComplete=\"off\"\n                                />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\" className=\"text-muted\">Your Email</label>\n                            <input \n                                onChange={this.handleInputChange('email')} \n                                type=\"email\" name=\"email\" \n                                className=\"form-control\"\n                                value={ email }\n                                autoComplete=\"off\"\n                                />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\" className=\"text-muted\">Your Password</label>\n                            <input \n                                onChange={this.handleInputChange('password')} \n                                type=\"password\" name=\"password\" \n                                className=\"form-control\"\n                                value={ password }\n                                autoComplete=\"off\"\n                                />                        \n                        </div>\n                        <button className=\"btn btn-block btn-outline-secondary\">SIGN UP</button>\n                    </form>\n                    <p className=\"mt-3\">\n                        <small className=\"text-muted\">Already have an account ? Please  \n                            <Link to=\"/login\" className=\"text-secondary\"> Sign In</Link>\n                        </small>\n                </p>\n                </div>\n            </div>\n        )\n    }\n    \n    displayErrors = () => {\n        if (this.state.error) {\n            return(\n                <div className={styles.errorMsg}>\n                    <span >{ this.state.error }</span>\n                </div>\n            )\n        }else if (this.state.success){\n            return(\n                <div className={styles.successMsg}>\n                    <span>{ this.state.success } </span><Link to='/login'><p>Log In</p></Link>\n                </div>\n            )\n        }\n    }\n        \n    render() { \n        const { name, email, password } = this.state;\n        return ( \n            this.renderForm(name, email, password)\n        );\n    }\n}\n \nexport default Register;","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n    return ( \n        <div className=\"spinner-section\">\n            <div className=\"spinner__container\">            \n                <div className=\"spinner-grow\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                </div>            \n            </div>\n        </div>\n    );\n}\n \nexport default Spinner;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\";\nimport { socialLogin, authenticate } from \"../auth\";\n \nclass SocialLogin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            redirectToReferrer: false\n        };\n    }\n \n    responseGoogle = response => {\n        console.log(response);\n        const { googleId, name, email, imageUrl } = response.profileObj;\n        const user = {\n            password: googleId,\n            name: name,\n            email: email,\n            imageUrl: imageUrl\n        };\n        // console.log(\"user obj to social login: \", user);\n        socialLogin(user).then(data => {\n            console.log(\"signin data: \", data);\n            if (data.error) {\n                console.log(\"Error Login. Please try again..\");\n            } else {\n                console.log(\"signin success - setting jwt: \", data);\n                authenticate(data, () => {\n                    this.setState({ redirectToReferrer: true });\n                });\n            }\n        });\n    };\n \n    render() {\n        // redirect\n        const { redirectToReferrer } = this.state;\n\n        if (redirectToReferrer) {\n            return <Redirect to=\"/\" />;\n        }\n \n        return (\n            <GoogleLogin\n                clientId=\"947299159026-82tm0sccl916kunuoffupnnv1ffiblr4.apps.googleusercontent.com\n                \"\n                buttonText=\"Sign with Google\"\n                onSuccess={this.responseGoogle}\n                onFailure={this.responseGoogle}                \n            />\n        );\n    }\n}\n \nexport default SocialLogin;","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { login, isLogedIn } from '../auth';\nimport styles from './User.module.css';\n\nimport Spinner from '../components/loading/Spinner';\n\nimport SocialLogin from './SocialLogin';\n\nclass Login extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            error: '',\n            redirectToReferer: false,\n            loading: false\n        }\n    }\n\n    handleInputChange = name => e => {\n        this.setState({ [name]: e.target.value });\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        let { email, password } =this.state;\n        let user = { email, password };\n        login(user)\n            .then( data => {\n                if(data.error) {\n                    console.log(data)\n                    this.setState({ error: data.error, loading: false })                    \n                }else{\n                    this.setState({\n                        email: '',\n                        password: '',\n                        error: ''                        \n                    })                    \n                    isLogedIn(data, () => {\n                        this.setState({ redirectToReferer: true });\n                    });                    \n                }\n            }).catch(err => console.log(err.response))\n    }\n    \n    renderForm = (email, password) => {\n        return(            \n            <div className={styles.login__form}>\n                <h5 className={styles.login__formHeader}>Sign In</h5>\n                \n                { this.displayErrors() }\n                <form onSubmit={ this.handleFormSubmit }>\n                    \n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\" className=\"text-muted\">Your Email</label>\n                        <input \n                            onChange={this.handleInputChange('email')} \n                            type=\"email\" name=\"email\" \n                            className=\"form-control\"\n                            value={ email }\n                            autoComplete=\"off\"\n                            />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\" className=\"text-muted\">Your Password</label>\n                        <input \n                            onChange={this.handleInputChange('password')} \n                            type=\"password\" name=\"password\" \n                            className=\"form-control\"\n                            value={ password }\n                            autoComplete=\"off\"\n                            />                        \n                    </div>\n                    <div className={styles.googlebtn}>\n                        <SocialLogin />\n                    </div>\n                    <button className=\"btn btn-block btn-outline-secondary\">SIGN IN</button>\n                </form>\n                <p className=\"mt-3\">\n                    <small className=\"text-muted\">Not already have an account ? Please  \n                        <Link to=\"/register\" className=\"text-secondary\"> Sign Up</Link>\n                    </small>\n                </p>\n            </div>        \n        )\n    }\n\n    displayErrors = () => {        \n        if (this.state.error) {\n            return(\n                <div className={styles.errorMsg}>\n                    <span >{ this.state.error }</span>\n                </div>\n            ) \n        }       \n    }\n    \n    render() { \n        let { email, password, redirectToReferer, loading } = this.state;\n        \n        if ( redirectToReferer ) {\n            return < Redirect to=\"/home\" />\n        }\n        return ( \n            <div className={`container-fluid ${styles.section__login}`}>                \n                { loading ? <Spinner /> : this.renderForm(email, password) }                \n            </div>\n            \n        );\n    }\n}\n \nexport default Login;","//<<<<<<<<<<<<<<<< GET USER PROFILE DATA >>>>>>>>>>>>>>>\nexport const getUser = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        }          \n    }).then( response => response.json());\n}\n\n// Fetch All Users\nexport const getAllUsers = (token) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/users`, {\n        method: \"GET\"        \n    }).then( response => response.json() );\n}\n\n//<<<<<<<<<<<<<<<<<< UPDATE USER PROFILE >>>>>>>>>>>>>>>>>\nexport const updateUserProfile = (userId, token, formData) => {\n    console.log(\"UPDATE\", formData)\n    return fetch(`${process.env.REACT_APP_API_URI}/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            // \"Content-Type\": \"application/json\", -> Not working with image upload\n            Authorization: `bearer ${token}`\n        },\n        body: formData\n    }).then( response => response.json()).catch(err => console.log(err))        \n}\n\n//<<<<<<<<<<<<<<<<<<<<< EDIT PROFILE BACKGROUND IMAGE >>>>>>>>>>>>>>>>>>>>>>>\nexport const backgroundImageHandler = (userId, token, formData) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/user/backgroundPhoto/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            // \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        },\n        body: formData\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err))\n}\nexport const getBackgroundImage = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/user/backgroundPhoto/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `bearer ${token}`\n        }          \n    }).then( response => response.json());\n}\n\n//<<<<<<<<<<<<<<<<<<<< UPDATE LOCAL STORAGE USER INFOS >>>>>>>>>>>>>>>>>>>>>>>\nexport const userLocalStorage = (user, next) => {\n    if (typeof window !== \"undefined\"){\n        if (localStorage.getItem('lemur_zone_jwt')) {\n            let auth = JSON.parse(localStorage.getItem('lemur_zone_jwt'));\n            auth.user = user;\n            localStorage.setItem('lemur_zone_jwt', JSON.stringify(auth));\n            next();\n        }\n    }\n}\n\n//<<<<<<<<<<<<<<<<<<<<< HANDLE FOLLOW >>>>>>>>>>>>>>>>>>>>>>>>>\nexport const follow = (userId, token, followId) => {\n    \n    return fetch(`${process.env.REACT_APP_API_URI}/user/follow`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", \n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify({ userId, followId })\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err))        \n}\n\n//<<<<<<<<<<<<<<<<<<<<< HANDLE UNFOLLOW >>>>>>>>>>>>>>>>>>>>>>>>>\nexport const unfollow = (userId, token, unfollowId) => {\n    \n    return fetch(`${process.env.REACT_APP_API_URI}/user/unfollow`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", \n            Authorization: `bearer ${token}`\n        },\n        body: JSON.stringify({ userId, unfollowId })\n    })\n    .then( response => response.json())\n    .catch(err => console.log(err))        \n}\n\n//<<<<<<<<<<<<<<<<<<< FIND PEOPLE TO FOLLOW >>>>>>>>>>>>>>>>>>>>> \nexport const findPeople = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URI}/user/findpeople/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then(res => {\n        return res.json()\n    }).catch( err => console.log(err))\n}","import React, { Component } from 'react';\nimport './findPeople.scss';\nimport Spinner from '../../components/loading/Spinner';\nimport avatar from '../../assets/default-avatar.jpg';\nimport { isAuthenticated } from '../../auth'\nimport { findPeople, follow } from '../apiUser';\nimport { Link } from 'react-router-dom';\n\nclass FindPeople extends Component {\n    \n    state = { \n        users: [],\n        error: undefined,\n        open: false,\n        followMsg: undefined\n    }\n\n    componentDidMount(){ \n        let userId = isAuthenticated().user._id;   \n        let token = isAuthenticated().token; \n        findPeople(userId, token)\n            .then( res => {\n                if (res.error) {\n                    console.log(res)\n                } else {              \n                    this.setState({ users: res.data })\n                }\n            })\n    }\n\n    /**\n     * SET USERS AS FOLLOWED | REMOVE USER FROM TOFOLLOW LIST\n     */\n    clickFollow = (user, index) => {\n        let userId = isAuthenticated().user._id;   \n        let token = isAuthenticated().token; \n        follow(userId, token, user._id)\n            .then( data => {\n                if (data.error) {\n                    console.log(data.error)\n                    this.setState({ error: data.error })\n                }else {\n                    console.log(data)\n                    let followList = this.state.users;\n                    followList.splice( index, 1 );\n                    this.setState({ users: followList, open: true, followMsg: `You're following ${user.name} now` })\n                }\n            })\n    }\n    \n    renderUsers =  users => {\n        return (                        \n            <>\n                { users.map( (user, index) => {\n                    return(\n                        <article key={index} className=\"friends-card\"> \n                            <div className=\"friends-card__img\">\n                                <img \n                                    onError={ i => (i.target.src = `${avatar}`)}\n                                    src={`${process.env.REACT_APP_API_URI}/user/photo/${user._id}`}\n                                    alt={user.name}                                 \n                                    />\n                            \n                                <Link to={`/user/${user._id}`}>\n                                    {user.name}\n                                </Link>\n                            </div>                           \n                            <div></div>                                                     \n                            <button \n                                onClick={ () => this.clickFollow(user, index) }\n                                className=\"btn-green\">\n                                follow\n                            </button>                                                                   \n                        </article>\n                    )\n                })}\n            </>            \n        )\n    }\n    \n    render() {      \n        const { users, open, followMsg } = this.state;\n        return ( \n            <div className=\"section-friends\">                \n                <div className=\"section-friends__header\">\n                    <h1>Who To <span>Follow</span></h1>\n                    { open && <span>{ followMsg }</span> }\n                </div> \n                <div className=\"section-friends__content\">\n                    { users ? this.renderUsers(users) : <Spinner /> }                \n                </div>\n            </div>\n        );\n    }\n}\n \nexport default FindPeople;","import React, { Component } from 'react';\nimport './allUsers.scss';\nimport Spinner from '../../components/loading/Spinner';\nimport avatar from '../../assets/default-avatar.jpg';\nimport { getAllUsers } from '../apiUser';\nimport { Link } from 'react-router-dom';\nimport { GoMail, GoCalendar } from \"react-icons/go\";\nimport { FaRegUser } from \"react-icons/fa\";\n\n\nclass AllUsers extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            users: []\n        }\n    }\n\n    componentDidMount(){        \n        getAllUsers()\n            .then( res => {\n                if (res.error) {\n                    console.log(res.error)\n                } else {    \n                    console.log(res)                \n                    this.setState({ users: res.users })\n                }\n            })\n    }\n\n    renderUsers =  users => {\n        return (                        \n            <>\n                               \n                { users.map( user => {\n                    return(\n                        <div key={user._id} className=\"user-card\" >\n                            <div className=\"user-card__img\">                                \n                                <img \n                                    onError={ i => (i.target.src = `${avatar}`)}\n                                    src={`${process.env.REACT_APP_API_URI}/user/photo/${user._id}`}\n                                    alt={user.name}                                     \n                                    />\n                            </div>\n                                \n                                <div className=\"user-card__body\">                                    \n                                    <div className=\"user-card__body-item\">\n                                        <FaRegUser size=\"20\" />\n                                        <Link to={`/user/${user._id}`}>\n                                            {user.name}\n                                        </Link>\n                                    </div>\n                                    <div className=\"user-card__body-item\" >\n                                        <GoMail size=\"20\"/> \n                                        <p>{user.email}</p>\n                                    </div>\n                                    <div className=\"user-card__body-item\" >                                            \n                                        <GoCalendar size=\"20\" className=\"\" /> \n                                        <p>{`${new Date(user.created).toDateString().substring(3)}`}</p>\n                                    </div>\n                                    \n                                </div>                                \n                        </div>\n                    )\n                })}\n            </>            \n        )\n    }\n    render() {        \n        return ( \n            <div className=\"section-users\">\n                <div className=\"section-users__header\">                    \n                    <h1>Find more <span>friends</span></h1>                                    \n                </div>                \n                <div className=\"section-users__content\">\n                    {this.state.users \n                        ? \n                        this.renderUsers(this.state.users)                            \n                        : <Spinner />}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default AllUsers;","import React from 'react';\nimport { AiOutlineDelete } from 'react-icons/ai';\n\nimport { isAuthenticated, deleteAccount, logout } from '../auth';\nimport { Redirect } from 'react-router-dom';\n\nclass DeleteUser extends React.Component{\n    \n    state = {\n        redirect: false\n    }\n\n    deleteProfile = () => {\n        const token = isAuthenticated().token;\n        const userId = this.props.userId;\n\n        deleteAccount(token, userId)\n            .then( res => {\n                if(res) {\n                    console.log(res)\n                } else {\n                    logout(() => { console.log( 'logged Out SUCCESSFULLY' ) });\n                    this.setState({ redirect: true })\n                }\n            })\n    }\n    \n    confirmPopUp = () => {\n        let popUp = window.confirm(`We are sad to leave you ${isAuthenticated().user.name}, see you next time!`);\n        if (popUp){\n            this.deleteProfile()    \n        }\n    }\n\n    render(){\n        if (this.state.redirect) {\n            return <Redirect to=\"/\" />\n        }\n        return ( \n            <AiOutlineDelete \n                data-toggle=\"tooltip\" title=\"Delete Account\"\n                onClick={this.confirmPopUp}\n                size={25}                \n            />\n        )\n    }\n}\n \nexport default DeleteUser;","import React from 'react';\nimport { follow, unfollow } from '../apiUser';\n\nconst FollowProfileButton = (props) => {\n\n    const handleFollow = () => {        \n        props.clickFollowButton(follow);\n    }\n\n    const handleUnfollow = () => {\n        props.clickFollowButton(unfollow)\n    }\n    \n    return ( \n        <div className=\"d-inline-block\">\n            { !props.following \n                ?  <button \n                        onClick={ handleFollow }\n                        className=\"btn-green\">follow</button>\n                :  <button \n                        onClick={ handleUnfollow }\n                        className=\"btn-green\">unfollow</button>\n            }\n            \n            \n        </div>\n    );\n}\n \nexport default FollowProfileButton;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport avatar from '../../assets/default-avatar.jpg';\nimport './profileTabs.scss';\n\n\nclass ProfileTabs extends Component {\n    \n    \n    state = {  }\n            \n    render() {\n        console.log(this.props)\n        const { following, followers }  = this.props;\n        return ( \n            <div className=\"tabs\">                \n                <div className=\"tabs__followers\">\n                    <h6>FOLLOWERS</h6><hr/>\n                    { followers.map( (follower, id) => (\n                        <div key={id}>                            \n                            <img \n                                className=\"tabs__followers-img\"                                                                                        \n                                onError={ i => (i.target.src = `${avatar}`)}\n                                src={`${process.env.REACT_APP_API_URI}/user/photo/${follower._id}`}                                                                           \n                            />\n                            \n                            <Link to={`/user/${follower._id}`}>\n                                <p className=\"tabs__followers-link\">{follower.name}</p>                            \n                            </Link>\n                        \n                        </div>\n                    ))}\n\n                </div>\n                <div className=\"tabs__following\">\n                    <h6>FOLLOWING</h6><hr/>\n                    { following.map( (isfollowing, id) => (\n                        <div key={id}>                            \n                            <img \n                                className=\"tabs__following-img\"\n                                onError={ i => (i.target.src = `${avatar}`)}\n                                src={`${process.env.REACT_APP_API_URI}/user/photo/${isfollowing._id}`}                                \n                            />\n                            \n                            <Link to={`/user/${isfollowing._id}`}>\n                                <p className=\"tabs__followers-link\">{isfollowing.name}</p>                                                                            \n                            </Link>\n                              \n                        </div>\n                    ))}\n                </div>\n            </div>\n            \n        )\n    }\n}\n \nexport default ProfileTabs;","import React, { Component } from 'react';\nimport defaultImg from '../../assets/tropical-escape.jpg'\nimport { Link } from 'react-router-dom';\n// import { AiOutlinePlusCircle } from \"react-icons/ai\";\nimport Spinner from '../../components/loading/Spinner';\n\nclass UsersPosts extends Component {\n    \n    \n    postsCard = posts => {\n        return(\n            posts.map( post => {\n                // const isTweetter = post.postedBy ? `/user/${post.postedBy._id}` : \"\";\n                // const tweeterName = post.postedBy ? post.postedBy.name : \" Unknown \";\n                return(\n                    <div key={post._id} className=\"card mb-2 mr-3 border-0\" style={{maxWidth: '540px'}}>\n                    <div className=\"row no-gutters\">\n                        <div className=\"col-md-4 p-3\">\n                            <img \n                                onError={ i => (i.target.src = `${defaultImg}`)}\n                                src={`${process.env.REACT_APP_API_URI}/post/photo/${post._id}?${new Date().getTime()}`} \n                                className=\"img-thumbnail mb-1\" \n                                alt={post.title} \n                                style={{width:'100%', height: '70px', objectFit: 'cover'}}\n                            />\n                        </div>\n                        <div className=\"col-md-8\">\n                            <div className=\"card-body\">\n                                <Link to={`/post/${post._id}`} className=\"text-secondary\">                                    \n                                    <p className=\"card-title m-0\">{ post.title }</p>\n                                </Link>\n                                <small className=\"card-text\">{ post.body.substring(0, 50) } ...</small>                                                                    \n                                <p className=\"card-text m-0\">                                    \n                                    <small className=\"text-muted\">on { new Date(post.created).toDateString() }</small>\n                                </p>\n                                                                                    \n                            </div>                        \n                        </div>\n                    </div>\n                </div>\n                )\n            })\n        )\n    }\n    \n    render() { \n        return ( \n            <div>\n                {this.props.posts ? this.postsCard(this.props.posts) : <Spinner  />}\n            </div>\n         );\n    }\n}\n \nexport default UsersPosts;","import React, { Component } from 'react';\nimport './backroundPhoto.style.css';\n\nimport { isAuthenticated }  from '../../auth';\nimport { backgroundImageHandler } from '../apiUser'\n\nclass UserBackgroundPhoto extends Component {\n\n    state = {\n        title: ''\n    }\n    \n    componentDidMount(){\n        this.photoData = new FormData()\n    }\n    \n    handleChange = name => e => {\n        const formValues = name === \"photo\" ? e.target.files[0] : e.target.value;\n        \n        this.photoData.set(name, formValues);\n        // this.setState({ [name]: formValues });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();  \n        // for (var pair of this.photoData.entries()) {\n        //     console.log(pair[0]+ ', ' + pair[1]); \n        // }      \n        const userId = isAuthenticated().user._id;\n        const token = isAuthenticated().token;\n\n        backgroundImageHandler(userId, token, this.photoData)\n            .then( data => {\n                if (data.error){\n                    console.log(data.error)\n                }else {\n                    console.log(\"BACKGROUND IMAGE\", data)\n                }\n            })\n    }\n\n    renderForm = () => {\n        return(\n            <>\n                <form onSubmit={this.handleSubmit}>\n                    <input \n                        type=\"file\" \n                        name=\"photo\" \n                        accept=\"image/*\"\n                        onChange={this.handleChange(\"photo\")}\n                    />\n                    {/* <div className=\"form-group\">\n                    <label htmlFor=\"\" className=\"text-muted\">Title</label>\n                    <input \n                        onChange={this.handleChange(\"title\")}\n                        value={this.state.title}\n                        type=\"text\" \n                        name=\"title\"\n                        className=\"form-control\"\n                    />\n                </div> */}\n                    <div>\n                        <button className=\"btn btn-info\">SAVE</button>\n                    </div>\n                </form>\n            </>\n        )\n    }\n    \n    render() { \n        return ( \n            <div className=\"section-backgroundForm\">\n                <div className=\"backgroundForm__container\">\n                    { this.renderForm() }\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default UserBackgroundPhoto;","import React, { Component } from 'react';\nimport { isAuthenticated } from '../../auth';\nimport { Redirect, Link } from 'react-router-dom';\nimport Spinner from '../../components/loading/Spinner';\nimport { AiOutlineUser, AiOutlineMail, AiOutlineEdit, AiOutlineEnvironment, AiOutlineGlobal, AiOutlineTwitter } from \"react-icons/ai\";\nimport { MdPhotoCamera } from \"react-icons/md\";\n\nimport image from \"../../assets/wp.jpg\";\nimport avatar from '../../assets/default-avatar.jpg';\nimport { getUser } from '../apiUser';\n\nimport DeleteUser from '../DeleteUser';\n\nimport './profile.style.scss';\n\nimport FollowProfileButton from '../Follow/FollowProfileButton';\nimport ProfileTabs from '../ProfileTabs/ProfileTabs';\nimport UsersPosts from '../../posts/UsersPosts/UsersPosts';\nimport { getUsersPosts } from '../../posts/apiPosts';\nimport UserBackgroundPhoto from '../UserBackgroundPhoto/UserBackgroundPhoto';\n\n\nclass Profile extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            user: {\n                following: [],\n                followers: []\n            },\n            redirectToHome: false,\n            About: true,\n            followComp: false,\n            postComp: false,\n            messageComp: false,\n            following: false,\n            error: '',\n            isPage: false,\n            popup: false,\n            posts: []\n        }\n    }\n\n    componentDidMount(){\n        let userId = this.props.match.params.userId;\n        this.getUserInfos(userId);\n        this.getUsersPosts(userId)         \n            \n\n    }\n    //Force page to reload after userProfile change\n    componentDidUpdate (prevProps) {\n        if (prevProps.location.key !== this.props.location.key) {\n            window.location.reload()\n        }\n    }\n    \n    //CHECK IF FOLLOW || UNFOLLOW\n    checkFollow = user => {\n        const jwt = isAuthenticated();        \n        //Find followers in [ ] then RETURN BOOL\n        const findFollowers = user.followers.find( follower => {            \n            return follower._id === jwt.user._id;\n        });\n        return findFollowers;\n    }\n    //Handle Follow click --> Send as props (see FollowProfileButton component)\n    clickFollowButton = callApi => {\n        const userId = isAuthenticated().user._id;\n        const token = isAuthenticated().token;\n\n        callApi(userId, token, this.state.user._id)\n            .then( data => {\n                if (data.error) {\n                    this.setState({  error: data})\n                } else {                    \n                    this.setState({  user: data, following: !this.state.following})\n                }\n\n            })\n    }\n    \n    getUserInfos = userId => {\n        const token = isAuthenticated().token;\n\n        getUser(userId, token)\n            .then( res => {\n                if (res.error) {\n                    this.setState({ redirectToHome: true })\n                }else {\n                    //Check Follow\n                    let following = this.checkFollow(res)                                      \n                    this.setState({ user: res, following: following })\n                }\n            })      \n    }\n\n    aboutComponent = (_id, name, about, address, website, email, created) => {        \n        return(\n            <div className=\"profile__card\">\n                <div className=\"d-flex\">\n                    <AiOutlineUser size={20} />\n                    <div className=\"ml-3\">{name}</div>\n                </div>\n                <div className=\"d-flex\">\n                    <AiOutlineMail size={20} />                               \n                    <div className=\"ml-3\">{email}</div>\n                </div>\n                <div className=\"d-flex\">\n                    <AiOutlineEnvironment size={20} />                               \n                    <div className=\"ml-3\">{ address ? address : <small>-</small> }</div>\n                </div>\n                <div className=\"d-flex\">\n                    <AiOutlineGlobal size={20} />                               \n                    <div className=\"ml-3\">{ website ? website : <small>-</small> }</div>\n                </div>\n                <div className=\"mb-3\">\n                    <small>{`Joined on ${new Date(created).toDateString()}`}</small>\n                </div>\n                <hr/>\n                <div className=\"d-flex flex-row justify-content-between\">\n                    <span className=\"mr-3\">\n                        followers \n                        <span className=\"badge badge-warning ml-1\" style={{fontSize: '14px'}}>\n                            {this.state.user ? this.state.user.followers.length : \"0\"}\n                        </span>\n                    </span>\n                    <span className=\"\">\n                        Following\n                        <span className=\"badge badge-warning ml-1\" style={{fontSize: '14px'}}>\n                            {this.state.user ? this.state.user.following.length : \"0\"}\n                        </span>\n                    </span>\n                </div>\n                <hr></hr>\n                <div className=\"\">                                                                  \n                    <div className=\"mt-3 mb-3\">{about}</div>\n                </div>\n                <hr></hr>\n                <div>\n                    {isAuthenticated().user &&\n                    isAuthenticated().user._id === _id \n                    ?(\n                        <div className=\"d-flex flex-row justify-content-around\">\n                            <DeleteUser userId={_id} />\n                            <Link to={`/user/edit/${_id}`}>\n                                <AiOutlineEdit size={25} color=\"grey\" data-toggle=\"tooltip\" title=\"Edit Profile\"/>\n                            </Link>\n                            <Link to={`/post/new`}>\n                                <AiOutlineTwitter size={25} color=\"grey\" data-toggle=\"tooltip\" title=\"Tweet\"/>\n                            </Link>\n                        </div>\n                    ) : (\n                        <FollowProfileButton \n                            following={this.state.following} \n                            clickFollowButton={this.clickFollowButton}                            \n                        />\n                    )}\n                </div>\n            </div>\n        )\n    }\n\n    renderAbout = () => {\n        this.setState({ About: true,followComp: false, postComp: false , message: false  })\n    }\n    renderFollow = () => {\n        this.setState({ followComp: true, postComp: false})\n    }\n    renderPosts = () => {\n        this.setState({ followComp: false, postComp: true })\n    }    \n\n    getUsersPosts = userId => {\n        const token = isAuthenticated().token;\n        getUsersPosts(userId, token)\n            .then( data => {\n                if(data.error){\n                    console.log(data.error)\n                }else {\n                    \n                    this.setState({ posts: data })\n                }\n            })\n    }\n    //BackgroundImage\n    // userBackgroundImage = userId => {\n    //     const token = isAuthenticated().token;\n    //     getBackgroundImage(userId, token).then(data => {\n    //         if (data.error){\n    //             console.log(data.error)\n    //         }else {\n    //             console.log(\"BCK IMAGE\", data)\n    //         }\n            \n    //     })\n    // }\n    \n    displayBackgroundPhotoPopup = () => {\n        return this.setState({ popup: !this.state.popup})\n    }\n\n    renderPopUp = () => {\n        return(\n            <UserBackgroundPhoto />\n        )\n    }\n    \n    renderUserInfos = (_id, name, about, address, website, email, created, profileImg) => {\n        return(            \n                <section className=\"profile__container\">\n                    <div className=\"profile__container-img\" style={{backgroundImage: `url(${image})`}}>                        \n                        &nbsp;\n                        <MdPhotoCamera\n                            onClick={this.displayBackgroundPhotoPopup}\n                            className=\"camera-icon\"\n                        />\n                    </div>                    \n                        <img \n                            onError={ i => (i.target.src = `${avatar}`)}\n                            src={ profileImg } \n                            alt=\"profile\"                             \n                        />                    \n                    <div className=\"profile__container-about\">                          \n                            {this.state.About ? this.aboutComponent(_id, name, about, address, website, email, created) : <Spinner/>}                        \n\n                        <div className=\"profile__banner\">\n                            <div className=\"profile__banner-items\" >\n                                <div className=\"profile__banner-items__item\" onClick={this.renderFollow}>\n                                    <p>Follows</p>    \n                                </div>\n                                <div className=\"profile__banner-items__item\" onClick={this.renderPosts}>\n                                    <p>Posts</p>    \n                                </div>\n                            </div>\n                            \n                            <div className=\"profile__banner-content\">\n                                {this.state.followComp ?\n                                    <ProfileTabs\n                                        followers={this.state.user.followers}\n                                        following={this.state.user.following}\n                                        isPage={this.state.isPage}\n                                /> : <UsersPosts posts={this.state.posts} />}\n                                                              \n                            </div>\n                        </div>                                               \n                    </div>                   \n                </section>\n            \n        )\n    }\n    \n    render() {         \n        const redirect = this.state.redirectToHome;\n        if (redirect) {\n            return <Redirect to='/login' />\n        }\n\n        const { _id, name, about, address, website, email, created } = this.state.user;\n        \n        const profileImg = _id \n        ? `${process.env.REACT_APP_API_URI}/user/photo/${_id}?${new Date().getTime()}` \n        : avatar; \n\n        return (            \n            <>\n                {this.state.popup ? this.renderPopUp() : null}\n                {this.state.user ? this.renderUserInfos(_id, name, about, address, website, email, created, profileImg) : <Spinner />}\n            </>\n        );\n    }\n}\n \nexport default Profile;","import React, { Component } from 'react';\nimport{ Redirect } from 'react-router-dom';\nimport Spinner from '../../components/loading/Spinner';\nimport { isAuthenticated } from '../../auth';\nimport { getUser, updateUserProfile } from '../apiUser';\n\nimport { userLocalStorage } from '../apiUser';\n\nimport './profileEdit.scss';\nimport { AiOutlineUser, AiOutlineMail, AiOutlineGlobal, AiFillEnvironment, AiOutlineKey, AiOutlineWarning } from \"react-icons/ai\";\nimport avatar from '../../assets/default-avatar.jpg';\n\nclass EditProfile extends Component {\n    \n    constructor() {\n        super();\n        this.state = {\n            id: '',\n            name: '',\n            email: '', \n            password: '',\n            address: '',\n            website: '',\n            about: '',\n            error: '',\n            success: '',   \n            fileSize: 0,         \n            redirectToProfile: false,\n            loading: false     \n        }\n    }\n\n    componentDidMount(){\n        this.userData = new FormData();\n        const id = this.props.match.params.userId;\n        this.getUserInfos(id);             \n    }\n    \n    getUserInfos = id => {\n        const token = isAuthenticated().token;\n        getUser(id, token)\n            .then(res => {\n                if(res.error){\n                    console.log(res.error)\n                } else {                    \n                    this.setState({ \n                        id: res._id, \n                        name: res.name, \n                        email: res.email ,\n                        about: res.about,\n                        address: res.address,\n                        website: res.website                      \n                    });\n                }\n            });                \n    }\n\n    handleInputChange = name => e => {        \n        this.setState({ error: '' });        \n        const formValues = name === \"photo\" ? e.target.files[0] : e.target.value;\n        //Get file size\n        const fileSize = name === \"photo\" ? e.target.files[0].size : 0;        \n        //Populate key: value pairs obj (ex: name: toto, email: b@b.b)\n        this.userData.set(name, formValues);    \n           \n        this.setState({  [name]: formValues, fileSize });        \n    }\n\n    backFunction = () => {\n        return this.props.history.goBack();\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault(); \n               \n        //check input validation \n        if (this.isInputValid()){\n            \n            const userId = this.props.match.params.userId;\n            const token = isAuthenticated().token;            \n            updateUserProfile(userId, token, this.userData)\n            \n                .then( data => {\n                    if(data.error) {\n                        console.log(data.error)\n                        this.setState({ error: data.error })\n                    } else {                        \n                        userLocalStorage( data.user, () => {                            \n                            this.setState({ \n                                redirectToProfile: true,\n                                success: data.message                            \n                            })\n                        })\n                    }\n                })\n        }\n    }\n    \n    renderForm = (name, email, about, address, website, password, photoUrl) => {\n        return(\n            <section className=\"section\">\n                <div className=\"section__header\">\n                    <h1 >EDIT <span>PROFILE</span></h1>\n                    <span>{this.state.error ? <><AiOutlineWarning color=\"orangeRed\" size={25}/> {this.state.error}</> : ''}</span>\n                </div>\n                \n                \n                \n                <div className=\"section__container\">                    \n                    \n                    <img\n                        onError={i => (i.target.src = `${avatar}`)}\n                        src={photoUrl}\n                        alt={name}\n                    />\n                    \n                    <form onSubmit={ this.handleFormSubmit }>                                                       \n                        <div className=\"section__container-form_item\">  \n                            <label htmlFor=\"file\">Choose an image</label>                              \n                            <input\n                                onChange={this.handleInputChange('photo')}\n                                type=\"file\"\n                                className=\"form-control input-file\"\n                                accept=\"image/*\"\n                            />\n                        </div>\n                        \n                        <div className=\"section__container-form_item\">\n                            <AiOutlineGlobal size={20} /> \n                            <input\n                                onChange={this.handleInputChange('website')}\n                                type=\"text\" name=\"website\"                            \n                                value={website}\n                                autoComplete=\"off\"\n                            />\n                        </div>                            \n                        <div className=\"section__container-form_item\">                                \n                            <AiOutlineUser size={20} />\n                            <input\n                                onChange={this.handleInputChange('name')}\n                                type=\"text\" name=\"name\"                                \n                                value={name}\n                                autoComplete=\"off\"\n                            />\n                        </div>\n\n                        <div className=\"section__container-form_item\">\n                            <AiOutlineMail size={20} />    \n                            <input\n                                onChange={this.handleInputChange('email')}\n                                type=\"email\" name=\"email\"                                \n                                value={email}\n                            />\n                        </div>\n\n                        <div className=\"section__container-form_item\">\n                            <AiFillEnvironment size={20} />  \n                            <input\n                                onChange={this.handleInputChange('address')}\n                                type=\"text\" name=\"address\"                                \n                                value={address}\n                            />\n                        </div>\n\n                        <div className=\"section__container-form_item\">\n                            <AiOutlineKey size={20} /> \n                            <input\n                                onChange={this.handleInputChange('password')}\n                                type=\"text\" name=\"password\"                                \n                                value={password}\n                                placeholder=\"New password\"                                \n                            />\n                        </div>\n                        <div className=\"section__container-form_textarea\">                                \n                            <textarea\n                                onChange={this.handleInputChange('about')}\n                                name=\"about\"\n                                placeholder=\"Your description\"                                \n                                value={about}\n                            />\n                        </div>\n                        \n                        <div className=\"section__container-form_btn\">\n                            <button className=\"btn-green\">UPDATE</button>\n                            <button\n                                onClick={this.backFunction}\n                            className=\"btn-green\">CANCEL</button>\n                        </div>                                                \n                    </form>\n                </div>\n                \n            </section>\n        )\n    }\n\n    isInputValid = () => {\n        const { name, email, password, fileSize } = this.state;\n\n        if (fileSize > 200000) {\n            this.setState({ error: \"Photo should be less than 200kb(2Mb)\" });\n            return false;\n        }\n\n        if (name.length === 0){\n            this.setState({ error: \"Name is require!\" })\n            return false;\n        }\n        if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)){\n            this.setState({ error: \"Email must be www@email.com format!\" })\n            return false\n        }\n        if (password.length >= 1 && password.length <= 5){\n            this.setState({ error: \"Password must be at least 6 characters!\" })\n            return false\n        }\n        return true;\n    }\n\n    // displayErrors = () => {        \n    //     if (this.state.error) {\n    //         return(\n                \n    //                 <span >{ this.state.error }</span>\n                \n    //         ) \n    //     }       \n    // }\n    \n    render() {                 \n        const { id, name, about, address, website, email, password, redirectToProfile } = this.state;\n        const photoUrl = id \n        ? `${process.env.REACT_APP_API_URI}/user/photo/${id}?${new Date().getTime()}`\n        : avatar;\n        \n        if (redirectToProfile) {\n            return <Redirect to={`/user/${id}`} />\n        }\n        return ( \n\n            <>                \n                { name || email ? this.renderForm(name, email, about, address, website, password, photoUrl) : <Spinner />}\n            </>\n        );\n    }\n}\n \nexport default EditProfile;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from './index';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    return (\n        <Route { ...rest } render={ props => isAuthenticated() ? (\n            <Component { ...props } />\n        ) : (\n            <Redirect to={{ \n                pathname: \"/login\",\n                state: { from: props.location }\n            }} />\n        )} />\n    )\n}\n\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport './newPost.scss';\nimport { isAuthenticated } from '../../auth';\nimport { createPost } from '../apiPosts';\nimport { Redirect } from 'react-router-dom';\nimport { AiOutlineWarning} from 'react-icons/ai';\n\nclass NewPost extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            title: '',\n            body: '',\n            postImgSize: 0,\n            error: '',\n            user: {},\n            loading: false,\n            redirectToProfile: false\n        }\n    }\n\n    componentDidMount(){\n        this.postData = new FormData();\n        this.setState({ user: isAuthenticated().user })        \n    }\n\n    handleChange = name => e => {\n        this.setState({ error: '' })\n        const formValues = name === \"photo\" ? e.target.files[0] : e.target.value;\n        const postImgSize = name === \"photo\" ? e.target.files[0].size : 0;\n        this.postData.set(name, formValues);\n        this.setState({ [name]: formValues, postImgSize });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.setState({ loading: true })\n        \n        if(this.isInputValid()){\n            \n            //console.log(this.state)\n            const userId = isAuthenticated().user._id;\n            const token = isAuthenticated().token;\n            \n            createPost(userId, token, this.postData)\n                .then(data => {\n                    if (data.error) {\n                        // console.log(data)\n                        this.setState({ error: data.error })\n                    } else {\n                        console.log(\"NEW POST\", data)\n                        this.setState({ redirectToProfile: true, loading: false, title:'', body:'' })\n                    }\n                })\n\n        }\n    }\n    \n    renderForm = () => { \n        return (             \n            <form onSubmit={this.handleSubmit}>                               \n                <label htmlFor=\"file\">                \n                <input \n                    onChange={this.handleChange(\"photo\")}\n                    type=\"file\" \n                    name=\"photo\"\n                    accept=\"image/*\"\n                    size=\"40\"                        \n                />Choose an image </label>             \n                <input \n                    onChange={this.handleChange(\"title\")}\n                    value={this.state.title}\n                    type=\"text\" \n                    name=\"title\"                        \n                    placeholder=\"Need a tweet title\"\n                    autoComplete=\"off\"\n                />            \n                <textarea \n                    onChange={this.handleChange(\"body\")}\n                    value={this.state.body}\n                    name=\"body\"\n                    cols=\"30\" \n                    rows=\"5\"\n                    className=\"\"\n                    placeholder=\"Tape your history\"\n                />                                                    \n                <button className=\"btn-green\">Tweet</button>\n                \n            </form>            \n        );\n    }\n\n    isInputValid = () => {\n        const { title, body, postImgSize } = this.state;\n        if (postImgSize > 1000000) {\n            this.setState({ error: \"Image should be less than 1Mg (100Kb)\" });\n            return false;\n        }\n        if (title.length === 0){\n            this.setState({ error: \"A title is required\" });\n            return false;\n        } \n        if (body.length === 0){\n            this.setState({ error: \"Post body is required\" });\n            return false;\n        }\n        return true;\n    }\n\n    displayErroMsg = () => {\n        if (this.state.error) {\n            return(\n                <div className=\"error-msg\">\n                    <span><AiOutlineWarning size={25} color=\"orangeRed\"/> { this.state.error }</span>\n                </div>\n            )\n        }\n    }\n\n    render(){\n        if (this.state.redirectToProfile){\n            return <Redirect to={`/user/${isAuthenticated().user._id}`}  />\n        }\n        return(            \n            <section className=\"section-tweet\">                \n                <div className=\"section-tweet__header\">\n                    <h1>New <span>Tweet</span></h1>\n                    {this.displayErroMsg()}\n                </div>                                   \n                <div className=\"section-tweet__content\">                                        \n                    { this.renderForm() }                    \n                </div>                \n            </section>\n        )\n    }\n}\n \nexport default NewPost;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport { comment, uncomment } from '../apiPosts';\nimport { isAuthenticated } from '../../auth';\nimport avatar from '../../assets/avatar.png';\nimport { AiOutlineDelete } from \"react-icons/ai\";\nimport './comment.scss'\n;\n\nclass Comment extends Component {\n    \n    state = {\n        text: \"\",\n        error: \"\"    \n    }\n\n    onInputChangeHandler = e => {   \n        this.setState({ error: '' });\n        this.setState({ text: e.target.value, });\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault();\n        if (!isAuthenticated()) {\n            this.setState({ error: \"Please Sign in\" });\n            return false;\n        }\n        if (this.isCommentValid()){\n            const userId = isAuthenticated().user._id;\n            const token = isAuthenticated().token;\n            const postId = this.props.postId;        \n            \n            comment(userId, token, postId, { text: this.state.text })\n                .then(data => {\n                    if (data.error){\n                        console.log(data.error)\n                    }else {\n                        //UPDATE PARENT COMPONENT STATE                        \n                        this.props.updateComments(data.comments);\n                        this.setState({ text: '' });                                    \n                    }                \n                })\n        }\n    }    \n\n    removeComment = comment => {\n        const userId = isAuthenticated().user._id;\n        const token = isAuthenticated().token;\n        const postId = this.props.postId;        \n        \n        uncomment(userId, token, postId, comment)\n            .then(data => {\n                if (data.error){\n                    console.log(data.error)\n                }else {                                                            \n                    this.props.updateComments(data.comments);\n                }                \n            })\n    }\n    confirmPopUp = comment => {\n        let popUp = window.confirm(`Are you sure to remove the comment?`);\n        \n        if (popUp){\n            this.removeComment(comment);    \n        }\n    }\n        \n    renderInput = () => {   \n        const userId = isAuthenticated().user._id; \n        return (\n            <article className=\"comment__form\">                \n                <img                                             \n                    className=\"\"\n                    onError={ i => (i.target.src = `${avatar}`)}\n                    src={`${process.env.REACT_APP_API_URI}/user/photo/${userId}`} \n                    alt=\"post\"\n                    style={{ width: '40px', height: '40px', borderRadius: '50%', objectFit: 'cover'  }}\n                />                \n                <div className=\"comment__form-input\">\n                    {/* <form> */}\n                        <input \n                            className=\"\"\n                            onChange={this.onInputChangeHandler}\n                            type=\"text\" \n                            name=\"comment\" \n                            autoComplete=\"off\"\n                            placeholder=\"   Leave a comment ...\"\n                            value={this.state.text}\n                        />\n                    {/* </form> */}\n                    <button \n                        className=\"btn-green\"                        \n                        onClick={ this.handleFormSubmit }\n                        >Comment</button>\n                </div>                \n            </article>\n        )\n    }\n\n    renderComment = comments => {\n        return(\n            comments.map( comment => {\n                return(\n                    <div className=\"comment__card\" key={ comment._id }>                        \n                        <Link to={`/user/${comment.postedBy._id}`}>\n                            <img                                             \n                                className=\"float-left mr-3\"\n                                onError={ i => (i.target.src = `${avatar}`)}\n                                src={`${process.env.REACT_APP_API_URI}/user/photo/${comment.postedBy._id}?${new Date().getTime()}`} \n                                alt={comment._id}\n                                style={{ width: '40px', height: '40px', borderRadius: '50%', objectFit: 'cover'  }}\n                            />\n                        </Link>                                                \n                        <div className=\"comment__card-content\">\n                            <p className=\"\">{comment.text}</p>                            \n                            <span>\n                                Posted by: \n                                    <Link to={`/user/${comment.postedBy._id}`} > { comment.postedBy.name } </Link>\n                                    on { new Date(comment.created).toDateString().substring(3) } | { new Date(comment.created).toLocaleTimeString() }\n                                \n                            </span>\n                        </div>\n                                                \n                        {isAuthenticated().user && isAuthenticated().user._id === comment.postedBy._id && (\n                            <AiOutlineDelete \n                            className=\"icon-delete\"\n                            onClick={() => { this.confirmPopUp(comment) }}\n                            />  \n                        )}                                              \n                    </div>\n                )\n            })\n        )\n    }\n\n    isCommentValid = () => {\n        const { text } = this.state;\n        if ( !text.length > 0 || text.length > 150 ) {\n            this.setState({ error: \"Comment should be between 1 and 150 characters.\" });\n            return false;\n        }\n        return true;\n    }\n    renderErrorMsg = () => (        \n        <span className=\"badge badge-danger\">{ this.state.error }</span>\n\n    )\n                    \n    render() { \n        const { comments } = this.props\n        return ( \n            <>                \n                <div className=\"row flex-column\">\n                    { this.renderComment(comments) }\n                </div>\n                <div className=\"row mt-3\">\n                    { this.renderInput() }\n                </div>\n                <div className=\"row justify-content-center mb-5\">\n                    {this.state.error ? this.renderErrorMsg() : null}\n                </div>\n            </>\n        );\n    }\n}\n \nexport default Comment;","import React, { Component } from 'react';\nimport './singlePost.css';\nimport { Redirect } from 'react-router-dom';\nimport { getPost } from '../apiPosts';\nimport defaultImg from '../../assets/tropical-escape.jpg';\nimport avatar from '../../assets/avatar.png';\nimport { Link } from 'react-router-dom';\nimport { IoIosArrowBack } from \"react-icons/io\";\nimport { AiOutlineEdit, AiOutlineDelete } from \"react-icons/ai\";\nimport { TiThumbsUp, TiThumbsDown } from \"react-icons/ti\";\nimport Spinner from '../../components/loading/Spinner';\nimport { isAuthenticated } from '../../auth';\nimport { deletePost, like, unlike } from '../apiPosts';\nimport { FaRegComment } from \"react-icons/fa\";\nimport Comment from '../Comment/Comment';\n\n\nclass SinglePost extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            post: '',            \n            redirect: false, \n            redirectToSignIn: false,  \n            like: false,            \n            likes: 0,\n            comments: []            \n        }\n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.postId;\n        getPost(id)\n            .then( data => {\n                if (data.error){\n                    console.log(data.error)\n                }else {   \n                    console.log(\"SINGLE POST\",data)                 \n                    this.setState({ \n                        post: data, \n                        likes: data.likes.length, \n                        like: this.isAlreadyLiked(data.likes),\n                        comments: data.comments\n\n                    })\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    updateComments = comments => {\n        this.setState({ comments: comments });\n    }\n\n    /**\n     * ALLOW ONLY TO LIKE ONCE\n     * CHECK IF USERID IS ALREADY IN ARRAY\n     * RETURN BOOLEAN -> if not found (false) return -1\n     */\n    isAlreadyLiked = likes => {\n        const userId = isAuthenticated() && isAuthenticated().user._id;\n        let findUserId = likes.indexOf(userId) !== -1;\n        return findUserId;\n    }\n\n    /**\n     * TOGGLE API REQUEST\n     * HANDLE ERROR if USER is not loggedIN and like post\n     */\n    toggleLikeIconHandler = () => {\n        //handle not logged in user error\n        if (!isAuthenticated()){\n            this.setState({ redirectToSignIn: true })\n            return false;\n        }\n\n        const userId = isAuthenticated().user._id;\n        const token = isAuthenticated().token;\n        const postId = this.props.match.params.postId;\n        let request = this.state.like ? unlike : like;\n\n        request(userId, token, postId)\n            .then( data => {\n                if (data.error){\n                    console.log(data.error)\n                }else{\n                    console.log(data)\n                    this.setState({ \n                        like: !this.state.like,\n                        likeIcon: !this.state.likeIcon,\n                        likes: data.likes.length \n                    })\n                }\n            })\n        \n    }\n        \n    renderPost = (_id, title, body, created, updated, postedBy, likes, like, comments) => { \n        const isTweetter = postedBy ? `/user/${postedBy._id}` : \"\";\n        const tweeterName = postedBy ? postedBy.name : \" Unknown \";\n        return ( \n            <>                                  \n                    <div className=\"p-2 row justify-content-between rounded-lg\">  \n                        <div className=\"d-flex\">\n                            <img                                                                             \n                                onError={ i => (i.target.src = `${avatar}`)}\n                                src={`${process.env.REACT_APP_API_URI}/user/photo/${postedBy._id}?${new Date().getTime()}`} \n                                alt={postedBy.name}\n                                style={{ width: '40px', height: '40px', borderRadius: '50%', border: '2px solid rgb(130,138,136)', objectFit: 'cover'  }}\n                            />                        \n                            <p className=\"font-italic my-auto ml-2\">\n                                <small> \n                                    <Link to={`${isTweetter}`} > { tweeterName } </Link>                                    \n                                </small>\n                            </p>\n                        </div>                      \n                        <div>\n                            <Link to={`/home`} className=\"align-self-center text-secondary text-muted\">\n                                <IoIosArrowBack size={35} />Back to posts\n                            </Link>\n                        </div>\n                    </div>\n                    \n                    <h5 className=\"display-4 font-weight-lighter\">{ title }</h5>                    \n                    <div className=\"\">\n                        <p className=\"lead\">{ body }</p>\n                    </div>\n                    <img \n                        onError={ i => (i.target.src = `${defaultImg}`)}\n                        src={`${process.env.REACT_APP_API_URI}/post/photo/${_id}?${new Date().getTime()}`} \n                        className=\"rounded-top\" \n                        alt={title} \n                        style={{width:'100%', height: '350px', objectFit: 'cover'}}\n                    />    \n                             \n                <div className=\"card-body rounded-bottom\" style={{background:'rgba(130,138,136, .05)'}}>                     \n                                        \n                    <p className=\"text-muted m-0\">\n                        <small>                                \n                            { new Date(created).toDateString().substring(3) }                             \n                        </small>\n                        <small className=\"ml-2\">                                                            \n                            { new Date(created).toLocaleTimeString() }\n                        </small>\n                    </p>                   \n                    <p className=\"text-muted mb-2\">\n                        <small>                                \n                            Last update { updated ? new Date(updated).toDateString() : '_'}\n                        </small>\n                    </p>\n\n                    <div className=\"d-flex\">\n                        <div>\n                            {like \n                            ? <TiThumbsUp \n                                data-toggle=\"tooltip\" title=\"like\"                                \n                                className=\"like-icon\"\n                                onClick={this.toggleLikeIconHandler} />\n                            : <TiThumbsDown \n                                data-toggle=\"tooltip\" title=\"dislike\"\n                                className=\"dislike-icon\"                                                                \n                                onClick={this.toggleLikeIconHandler} />\n                            }\n                            \n                            <span className=\"badge icon-badge\" >\n                                {likes}\n                            </span>\n                        </div>\n                        <div className=\"ml-5\">                  \n                            <FaRegComment className=\"comment-icon\"/>\n                            <span className=\"badge icon-badge\" >\n                                {comments.length}\n                            </span>                    \n                        </div>\n                    </div>\n                    <div>\n                        {isAuthenticated().user &&\n                        isAuthenticated().user._id === postedBy._id \n                    ?(\n                        <div className=\"d-flex flex-row-reverse text-secondary\">\n                            <AiOutlineDelete \n                                onClick={this.confirmPopUp}\n                                size={25} \n                                className=\"loggedInUser__icon delete\"\n                                data-toggle=\"tooltip\" title=\"Delete Post\"/> Delete\n\n                            <Link to={`/post/edit/${_id}`}  className=\"mr-3\" style={{color: 'grey'}}>\n                                Edit <AiOutlineEdit size={27} data-toggle=\"tooltip\" title=\"Edit Post\" className=\"loggedInUser__icon edit\"/>\n                            </Link>                            \n                        </div>\n                    ) : (\n                        null\n                    )}\n                </div>                    \n                                            \n                </div>                 \n            </>\n        );\n    }\n\n    deletePost = () => { \n        const token = isAuthenticated().token;\n        const postId = this.props.match.params.postId;\n\n        deletePost(token, postId)\n            .then( data => {\n                if(data.error) {\n                    console.log(data.error)                    \n                } else {                    \n                    this.setState({ redirect: true })\n                }\n            })\n    }\n    \n    confirmPopUp = () => {\n        let popUp = window.confirm(`Are you sure to delete this post?`);\n        \n        if (popUp){\n            this.deletePost();    \n        }\n    }\n\n    render(){\n        // console.log('COMMENTS', this.state.comments)\n        const { _id, title, body, created, updated, postedBy } = this.state.post;\n        const { likes, like, comments } = this.state;               \n        \n        if(this.state.redirect){\n            return <Redirect to=\"/home\" />\n        }\n        if(this.state.redirectToSignIn){\n            return <Redirect to=\"/login\" />\n        }\n        return(\n            <div className=\"section-post\">   \n                {/* <div className=\"row justify-content-between mt-5\">                                        \n                </div>                             */}\n                { this.state.post ? this.renderPost(_id, title, body, created, updated, postedBy, likes, like, comments): <Spinner /> }\n                <Comment postId={_id} comments={ comments } updateComments={this.updateComments} />\n            </div>\n        )\n    }\n\n}\n \nexport default SinglePost;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport defaultImage from '../../assets/node.png'\nimport { isAuthenticated } from '../../auth';\nimport { getPost ,updatePost } from '../apiPosts';\nimport './editpost.scss';\nimport { AiOutlineWarning } from 'react-icons/ai';\n// import Spinner from '../../components/loading/Spinner';\n\nclass EditPost extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            id: '',\n            title: '',\n            body: '',\n            postedBy: '',\n            fileSize: 0  ,\n            redirect: false ,\n            error: ''       \n        }\n    }\n\n    componentDidMount(){\n        this.postData = new FormData();  \n        const postId = this.props.match.params.postId;\n        this.getPost(postId);\n    }\n\n    getPost = postId => {\n        const token = isAuthenticated().token;\n        getPost(postId, token)\n            .then(res => {\n                if(res.error){\n                    console.log(res.error)\n                } else {                    \n                    this.setState({ \n                        id: res._id,                        \n                        title: res.title, \n                        body: res.body,\n                        postedBy: res.postedBy                                          \n                    });\n                }\n            });                \n    }\n\n    handleInputChange = name => e => {        \n        this.setState({ error: '' });        \n        const formValues = name === \"photo\" ? e.target.files[0] : e.target.value;        \n        const fileSize = name === \"photo\" ? e.target.files[0].size : 0;                \n        this.postData.set(name, formValues);               \n        this.setState({  [name]: formValues, fileSize });        \n    }\n\n    backFunction = () => {\n        return this.props.history.goBack();\n    }\n\n    handleFormSubmit = e => {\n        e.preventDefault();                        \n        if (this.isInputValid()){\n            \n            const postId = this.state.id;\n            const token = isAuthenticated().token; \n\n            updatePost(postId, token, this.postData)            \n                .then( data => {\n                    if(data.error) {\n                        console.log(data.error)\n                        this.setState({ error: data.error })\n                    } else {                                                                      \n                        this.setState({ \n                            title:'',\n                            body:'',\n                            redirect: true \n                        })                        \n                    }\n                })\n        }\n    }\n\n    isInputValid = () => {\n        const { title, body, fileSize } = this.state;\n\n        if (fileSize > 100000) {\n            this.setState({ error: \"Photo should be less than 100kb(1Mb)\" });\n            return false;\n        }\n\n        if (title.length === 0){\n            this.setState({ error: \"Title is require!\" })\n            return false;\n        }\n\n        if (body.length === 0){\n            this.setState({ error: \"Body is require!\" })\n            return false;\n        }\n        \n        return true;\n    }\n\n    renderForm = (id, title, body) => {\n        return(                                              \n            <form onSubmit={ this.handleFormSubmit }>                        \n                <label htmlFor=\"photo\" className=\"text-muted\">Choose an image\n                    <input \n                        onChange={this.handleInputChange('photo')} \n                        type=\"file\" \n                        className=\"form-control input-file\"\n                        accept=\"image/*\"                              \n                /></label>\n                                    \n                <input \n                    onChange={this.handleInputChange('title')} \n                    type=\"text\" name=\"title\" \n                    className=\"form-control\"\n                    value={ title }\n                    />\n                \n                <textarea \n                    onChange={this.handleInputChange('body')} \n                    type=\"text\" name=\"body\" \n                    className=\"form-control\"\n                    value={ body }\n                    />\n            \n                <div className=\"form-btns\">\n                    <button className=\"btn-green\">UPDATE</button>\n                    <button \n                    onClick={this.backFunction}\n                    className=\"btn-green\">CANCEL</button>\n                </div>                        \n            </form>\n           \n        )\n    }\n\n    displayErrors = () => {        \n        if (this.state.error) {\n            return(\n                <div className=\"error-msg\">\n                    <span ><AiOutlineWarning size={25} color=\"orangeRed\" /> { this.state.error }</span>\n                </div>\n            ) \n        }       \n    }\n                \n    render() { \n        const { id, title, body, postedBy, redirect } = this.state;\n        if (redirect){\n            return <Redirect to={`/user/${postedBy._id}`} />\n        }\n        return ( \n            <section className=\"section-editpost\">\n                <div className=\"section-editpost__header\">\n                    <h1>Edit <span>Tweet</span></h1>\n                    {this.displayErrors()}\n                </div>\n               \n                <div className=\"section-editpost__content\">\n                    <img\n                        onError={i => (i.target.src = `${defaultImage}`)}\n                        src={`${process.env.REACT_APP_API_URI}/post/photo/${id}?${new Date().getTime()}`}\n                        alt={title}                        \n                    />\n                    { this.state.id ? this.renderForm(id, title, body) : null }\n                </div>\n            </section>\n        );\n    }\n}\n \nexport default EditPost;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './HOC/Layout';\nimport Home from './components/Home/Home';\nimport Register from './user/Register';\nimport Login from './user/Login';\nimport FindPeople from './user/FindPeople/FindPeople';\nimport AllUsers from './user/AllUsers/AllUsers';\nimport Profile from './user/Profile/Profile';\nimport EditProfile from './user/EditProfile/EditProfile';\nimport PrivateRoute from './auth/PrivateRoute';\nimport NewPost from './posts/NewPost/NewPost';\nimport SinglePost from './posts/SinglePost/SinglePost';\nimport EditPost from './posts/EditPost/EditPost';\n\n\nconst Routes = () => {\n    return (     \n        <Layout>\n            <Switch>\n                <Route exact path=\"/\" component={ Home } />\n                <Route path=\"/home\" component={ Home } />\n                <Route path=\"/register\" component={ Register }/>\n                <Route path=\"/login\" component={ Login } />\n                <PrivateRoute path=\"/find-people\" component={ FindPeople } />\n                <Route path=\"/all-users\" component={ AllUsers } />\n                <PrivateRoute path=\"/user/edit/:userId\" component={ EditProfile } />\n                <PrivateRoute path=\"/user/:userId\" component={Profile} />\n                <PrivateRoute path=\"/post/new\" component={NewPost} />\n                <PrivateRoute path=\"/post/edit/:postId\" component={EditPost} />\n                <PrivateRoute path=\"/post/:postId\" component={SinglePost} />\n            </Switch>\n        </Layout>    \n    );\n}\n \nexport default Routes;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from './Routes';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => (\n    <BrowserRouter>\n        <Routes />\n    </BrowserRouter>\n)\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/default-avatar.fc6a7475.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section__register\":\"User_section__register__1ugVC\",\"register__form\":\"User_register__form__2WCuK\",\"register__formHeader\":\"User_register__formHeader__2oN3r\",\"errorMsg\":\"User_errorMsg__3ZuSX\",\"successMsg\":\"User_successMsg__3CQFz\",\"section__login\":\"User_section__login__aoVGG\",\"googlebtn\":\"User_googlebtn__1dDae\",\"login__form\":\"User_login__form__14tsD\",\"login__formHeader\":\"User_login__formHeader__25Dd5\",\"section__editProfile\":\"User_section__editProfile__275gF\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.f817a688.png\";","module.exports = __webpack_public_path__ + \"static/media/tropical-escape.d84c3587.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sz-logo.0a8f7727.png\";","module.exports = __webpack_public_path__ + \"static/media/wp.362d508a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/node.fed36d15.png\";"],"sourceRoot":""}